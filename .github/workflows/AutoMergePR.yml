name: Auto-Merge to Main
# 仅在添加标签时触发，检查 Auto-merge 标签后启用 GitHub auto-merge

on:
  pull_request:
    types: [labeled, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  enable-auto-merge:
    runs-on: ubuntu-latest
    if: github.event.label.name == 'Auto-merge'  # 只处理 Auto-merge 标签
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 检查 PR 是否符合启用条件
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO_OWNER=$(gh repo view ${{ github.repository }} --json owner -q ".owner.login")
          LOG_FILE="pr_enable_log_${PR_NUMBER}.md"

          echo "🔍 正在检查 PR #$PR_NUMBER"
          echo "# PR #$PR_NUMBER 启用日志 - $(date)" > $LOG_FILE
          echo "" >> $LOG_FILE

          # 获取 PR 信息
          PR_INFO=$(gh pr view $PR_NUMBER --json author,labels,baseRefName,mergeable)
          PR_AUTHOR=$(echo "$PR_INFO" | jq -r '.author.login')
          PR_BASE=$(echo "$PR_INFO" | jq -r '.baseRefName')
          PR_MERGEABLE=$(echo "$PR_INFO" | jq -r '.mergeable')

          echo "## PR 信息" >> $LOG_FILE
          echo "- 作者: $PR_AUTHOR" | tee -a $LOG_FILE
          echo "- 目标分支: $PR_BASE" | tee -a $LOG_FILE
          echo "- 可合并状态: $PR_MERGEABLE" | tee -a $LOG_FILE
          echo "" >> $LOG_FILE

          echo "## 检查结果" >> $LOG_FILE
          SHOULD_ENABLE=true

          # 检查目标分支
          if [ "$PR_BASE" != "main" ]; then
            echo "❌ 目标分支不是 main,跳过" | tee -a $LOG_FILE
            SHOULD_ENABLE=false
          else
            echo "✅ 目标分支是 main" | tee -a $LOG_FILE
          fi

          # 检查冲突状态（GitHub auto-merge 会自动处理后续变化）
          if [ "$PR_MERGEABLE" = "CONFLICTING" ]; then
            echo "❌ 存在合并冲突,跳过（后续解决后 GitHub 会自动合并）" | tee -a $LOG_FILE
            SHOULD_ENABLE=false
          else
            echo "✅ 无合并冲突" | tee -a $LOG_FILE
          fi

          # 审批检查
          PR_REVIEWS=$(gh pr view $PR_NUMBER --json reviews -q '.reviews[] | .state' 2>/dev/null || echo "")
          if [ "$PR_AUTHOR" = "$REPO_OWNER" ]; then
            echo "✅ 作者是仓库所有者,跳过审批" | tee -a $LOG_FILE
          elif echo "$PR_REVIEWS" | grep -q "APPROVED"; then
            echo "✅ PR 已批准" | tee -a $LOG_FILE
          else
            echo "❌ PR 未批准,跳过" | tee -a $LOG_FILE
            SHOULD_ENABLE=false
          fi

          # 输出结果
          echo "" >> $LOG_FILE
          echo "## 最终结果" >> $LOG_FILE
          if [ "$SHOULD_ENABLE" = true ]; then
            echo "✅ 条件符合，开始启用 auto-merge" | tee -a $LOG_FILE
            # 启用 auto-merge（merge 策略，使用 merge commit）
            if gh pr merge $PR_NUMBER --auto --merge; then
              echo "✅ Auto-merge 已启用，GitHub 将持续监控并自动合并" | tee -a $LOG_FILE
            else
              echo "❌ 启用失败" | tee -a $LOG_FILE
              exit 1
            fi
          else
            echo "❌ 不符合条件" | tee -a $LOG_FILE
          fi

      - name: 上传日志
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-enable-log-${{ github.event.pull_request.number }}
          path: pr_enable_log_${{ github.event.pull_request.number }}.md
