name: Scheduled Auto-Merge to Main (Full Features, Logging)

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点执行
  workflow_dispatch:     # 支持手动触发

jobs:
  prepare-prs:
    runs-on: ubuntu-latest
    outputs:
      pr_numbers: ${{ steps.get_prs.outputs.pr_numbers }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装依赖
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: 安装 GitHub CLI
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.11.0/gh_2.11.0_linux_amd64.deb -o gh.deb
          sudo dpkg -i gh.deb
          sudo apt-get install -f

      - name: 登录 GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: 获取符合条件的 PR
        id: get_prs
        run: |
          NOW_TS=$(date +%s)
          REPO_OWNER=$(gh repo view ${{ github.repository }} --json owner -q ".owner.login")

          PR_NUMS=()
          LOG_ENTRIES=()

          gh pr list --state open --json number,createdAt,author,labels,baseRefName | jq -c '.[]' | while read PR; do
            PR_NUMBER=$(echo "$PR" | jq -r '.number')
            PR_CREATED_AT=$(echo "$PR" | jq -r '.createdAt')
            PR_AUTHOR=$(echo "$PR" | jq -r '.author.login')
            PR_LABELS=$(echo "$PR" | jq -r '.labels[].name // empty')
            PR_BASE=$(echo "$PR" | jq -r '.baseRefName')

            LOG_MSG="PR #$PR_NUMBER"

            # 只处理目标分支 main
            if [ "$PR_BASE" != "main" ]; then
              LOG_ENTRIES+=("$LOG_MSG 目标分支不是 main，跳过")
              continue
            fi

            # 超过 24 小时，仅在定时触发时检查
            if [ "$GITHUB_EVENT_NAME" != "workflow_dispatch" ]; then
              PR_TS=$(date -d "$PR_CREATED_AT" +%s)
              DELTA=$((NOW_TS - PR_TS))
              if [ $DELTA -lt 86400 ]; then
                LOG_ENTRIES+=("$LOG_MSG 未超过 24 小时，跳过")
                continue
              fi
            fi

            # 检查 Auto-merge 标签
            if ! echo "$PR_LABELS" | grep -q "Auto-merge"; then
              LOG_ENTRIES+=("$LOG_MSG 不包含 Auto-merge 标签，跳过")
              continue
            fi

            # 审批检查
            PR_STATUS=$(gh pr view $PR_NUMBER --json reviews -q ".reviews[].state")
            if [ "$PR_AUTHOR" = "$REPO_OWNER" ]; then
              LOG_ENTRIES+=("$LOG_MSG 作者是仓库所有者，跳过审批检查")
            elif echo "$PR_STATUS" | grep -q "APPROVED"; then
              LOG_ENTRIES+=("$LOG_MSG 已批准")
            else
              LOG_ENTRIES+=("$LOG_MSG 未批准，跳过合并")
              continue
            fi

            PR_NUMS+=("$PR_NUMBER")
          done

          # 输出 PR 列表为 JSON
          if [ ${#PR_NUMS[@]} -eq 0 ]; then
            echo "pr_numbers=[]" >> $GITHUB_OUTPUT
          else
            PR_JSON=$(printf '%s\n' "${PR_NUMS[@]}" | jq -R . | jq -s .)
            echo "pr_numbers=$PR_JSON" >> $GITHUB_OUTPUT
          fi



          # 生成日志文件
          LOG_FILE="pr_merge_log.md"
          echo "# PR 合并检查日志 - $(date)" > $LOG_FILE
          for entry in "${LOG_ENTRIES[@]}"; do
            echo "- $entry" >> $LOG_FILE
          done
          echo "生成日志文件 $LOG_FILE"
          cat $LOG_FILE

      - name: 上传日志为 artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-merge-log
          path: pr_merge_log.md

  merge-prs:
    needs: prepare-prs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pr_number: ${{ fromJSON(needs.prepare-prs.outputs.pr_numbers) }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 GitHub CLI
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.11.0/gh_2.11.0_linux_amd64.deb -o gh.deb
          sudo dpkg -i gh.deb
          sudo apt-get install -f

      - name: 登录 GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: 自动合并 PR（带重试日志）
        run: |
          PR_NUMBER=${{ matrix.pr_number }}
          MAX_RETRIES=3
          RETRY_INTERVAL=3600  # 1小时
          LOG_FILE="pr_merge_log.md"

          COUNT=0
          SUCCESS=false
          while [ $COUNT -lt $MAX_RETRIES ]; do
            ATTEMPT_TIME=$(date "+%Y-%m-%d %H:%M:%S")
            echo "[$ATTEMPT_TIME] 尝试第 $((COUNT+1)) 次合并 PR #$PR_NUMBER..."
            if gh pr merge $PR_NUMBER --merge --auto; then
              echo "[$ATTEMPT_TIME] PR #$PR_NUMBER 合并成功"
              echo "- [$ATTEMPT_TIME] PR #$PR_NUMBER 合并成功 ✅" >> $LOG_FILE
              SUCCESS=true
              break
            else
              echo "[$ATTEMPT_TIME] PR #$PR_NUMBER 合并失败，等待 $RETRY_INTERVAL 秒后重试..."
              echo "- [$ATTEMPT_TIME] PR #$PR_NUMBER 合并失败 ❌" >> $LOG_FILE
              COUNT=$((COUNT+1))
              sleep $RETRY_INTERVAL
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "PR #$PR_NUMBER 合并失败，达到最大重试次数 $MAX_RETRIES"
            echo "- PR #$PR_NUMBER 合并失败，达到最大重试次数 ❌" >> $LOG_FILE
            exit 1
          fi

      - name: 上传合并日志
        uses: actions/upload-artifact@v4
        with:
          name: pr-merge-log
          path: pr_merge_log.md
